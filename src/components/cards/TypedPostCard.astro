---
import { Image } from "astro:assets";

import type { CollectionEntry } from "astro:content";
import { getReadingTime } from "../../utils/readingTime";
import { formatDate } from "../../utils/formatDate";
import { getEntry } from "astro:content";

interface Props {
  post: CollectionEntry<"blog">;
}

const { post } = Astro.props;

const { data, id } = post;

const { title, description, image, pubDate } = data;

const readingTime = post.body ? getReadingTime(post.body) : "";

// Referenced data
const author = await getEntry("author", data.author.id);
---

<a href=`/blog/${id}`>
  <article
    class="relative group overflow-hidden rounded-xl shadow-sm transition hover:shadow-xl"
  >
    <Image
      src={image}
      alt={title}
      class="absolute inset-0 h-full w-full object-cover transition ease-in-out duration-300 group-hover:scale-105"
    />

    <div class="flex items-center space-x-2 absolute z-20 shrink-0 top-2.5 left-2.5">
      {
        author && (
          <Image
            src={author.data.avatar}
            alt={author.data.name}
            class="rounded-full border-2 border-slate-100"
            width="48"
            height="48"
          />

          <p class="text-slate-50/95 font-extrabold">{author.data.name}</p>
        )
      }
    </div>

    <div
      class="relative bg-gradient-to-t from-slate-950/60 to-slate-500/10 pt-32 sm:pt-48 lg:pt-64"
    >
      <div class="p-4 sm:p-6">
        <p class="text-xl text-slate-100/95">
          <strong>Tiempo de lectura: </strong>
          {readingTime?.split(" ").slice(1).join(" ")}
        </p>
        <p class="text-xl text-slate-100/95">{formatDate(pubDate)}</p>
        <p class="text-xl text-slate-100/95 mt-2 line-clamp-3">{description}</p>
      </div>
    </div>
  </article>
</a>
